# This is to generate output required for Ben's plots. His inputs are the '*/align_coords.tsv' files generated by mmseqs
# Which are generated by run_synteny_MP.py

prog = mmseqs
in = longread_pangenome/expanded_dataset_analysis/assemblies/dataset_v5
ref = longread_pangenome/synteny/renamed_GCF_000008685.2.gbff
out = longread_pangenome/expanded_dataset_analysis/alignments/B31/prot/
cores = all! # however much that is.

# PROT AV1
#docker run --rm -v $(pwd):/data -it mjfos2r/pgv_docker \
-run \
--cores 16 --mode av1 --prog mmseqs \
--input assemblies/dataset_v5 \
--ref ref/B31/renamed_GCF_000008685.2.gbff \
--output alignments/B31/prot

# NUCL AVA
docker run -u $UID --rm -v $(pwd):/data -v /mnt/disks/ava-results/:/output -it mjfos2r/pgv_docker \
-run \
--cores 360 --mode ava --prog mummer --slim \
--input assemblies/all_split_contigs_v5 \
--output nucl_v5

# TEST SLIM AV1
docker run --rm -v $(pwd):/data -it mjfos2r/pgv_docker \
-run \
--cores 16 --mode av1 --prog mummer --slim \
--input assemblies/dataset_v5 \
--ref ref/B31/renamed_GCF_000008685.2.gbff \
--output alignments/TEST

# TEST SLIM AVA
docker run --rm -v $(pwd):/data -v /mnt/disks/ava-results/:/output -it mjfos2r/pgv_docker \
-run \
--cores 360 --mode ava --prog mummer --slim \
--input assemblies/dataset_v5 \
--output alignments/TEST

###################################################################################################################
# Parsing commands below!                                                                                         #
###################################################################################################################

#Parse big AVA
docker run --rm -v $(pwd):/data -v /mnt/disks/ava-results/:/alignments -it mjfos2r/pgv_docker \
-parse \
--dale \
--annotations_dir assemblies/all_split_contigs_v5 \
--alignments_dir nucl_v5 \
--output_dir output/alignments/ava \
--analysis_type nucl \
--version nucl_v5_2

#--all_alns_file nucl_v5_all_alignments.tsv \




